<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.mapper.TbStudentMapper">
  <resultMap id="BaseResultMap" type="com.smart.pojo.TbStudent">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="profession_id" jdbcType="VARCHAR" property="professionId" />
    <result column="college_id" jdbcType="VARCHAR" property="collegeId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="wexin_id" jdbcType="VARCHAR" property="wexinId" />
    <result column="phone_code" jdbcType="VARCHAR" property="phoneCode" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="identity_id" jdbcType="VARCHAR" property="identityId" />
  </resultMap>
<!--  <resultMap id="courseList" type="com.smart.pojo.WCourseInfo">-->
<!--    <id property="id" column="id"/>-->
<!--    <result property="time" column="time"/>-->
<!--    <result property="courseId" column="courseId"/>-->
<!--    <result property="courseName" column="courseName"/>-->
<!--    <result property="courseNote" column="courseNote"/>-->
<!--    <result property="attendanceTotalScore" column="attendanceTotalScore"/>-->
<!--    <result property="leaveScore" column="leaveScore"/>-->
<!--    <result property="attendScore" column="attendScore"/>-->
<!--    <result property="lateAttendScore" column="lateAttendScore"/>-->
<!--    <result property="headUpScore" column="headUpScore"/>-->
<!--    <result property="classroomId" column="classroomId"/>-->
<!--    <result property="teacherId" column="teacherId"/>-->
<!--    <result property="teacherName" column="teacherName"/>-->
<!--  </resultMap>-->
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, sex, picture, class_id, profession_id, college_id, password, wexin_id, 
    phone_code, email, identity_id
  </sql>
  <select id="selectByExample" parameterType="com.smart.pojo.TbStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_student
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_student
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.smart.pojo.TbStudentExample">
    delete from tb_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smart.pojo.TbStudent">
    insert into tb_student (id, name, sex, picture, 
      class_id, profession_id, college_id, 
      password, wexin_id, phone_code, 
      email, identity_id)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{picture,jdbcType=VARCHAR}, 
      #{classId,jdbcType=VARCHAR}, #{professionId,jdbcType=VARCHAR}, #{collegeId,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{wexinId,jdbcType=VARCHAR}, #{phoneCode,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{identityId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.smart.pojo.TbStudent">
    insert into tb_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="professionId != null">
        profession_id,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="wexinId != null">
        wexin_id,
      </if>
      <if test="phoneCode != null">
        phone_code,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="identityId != null">
        identity_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="professionId != null">
        #{professionId,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="wexinId != null">
        #{wexinId,jdbcType=VARCHAR},
      </if>
      <if test="phoneCode != null">
        #{phoneCode,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="identityId != null">
        #{identityId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smart.pojo.TbStudentExample" resultType="java.lang.Long">
    select count(*) from tb_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.professionId != null">
        profession_id = #{record.professionId,jdbcType=VARCHAR},
      </if>
      <if test="record.collegeId != null">
        college_id = #{record.collegeId,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.wexinId != null">
        wexin_id = #{record.wexinId,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneCode != null">
        phone_code = #{record.phoneCode,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.identityId != null">
        identity_id = #{record.identityId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_student
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      profession_id = #{record.professionId,jdbcType=VARCHAR},
      college_id = #{record.collegeId,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      wexin_id = #{record.wexinId,jdbcType=VARCHAR},
      phone_code = #{record.phoneCode,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      identity_id = #{record.identityId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smart.pojo.TbStudent">
    update tb_student
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=VARCHAR},
      </if>
      <if test="professionId != null">
        profession_id = #{professionId,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="wexinId != null">
        wexin_id = #{wexinId,jdbcType=VARCHAR},
      </if>
      <if test="phoneCode != null">
        phone_code = #{phoneCode,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="identityId != null">
        identity_id = #{identityId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smart.pojo.TbStudent">
    update tb_student
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      picture = #{picture,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=VARCHAR},
      profession_id = #{professionId,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      wexin_id = #{wexinId,jdbcType=VARCHAR},
      phone_code = #{phoneCode,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      identity_id = #{identityId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

<!--  字节添加的方法-->
  <select id="selectWCourseInfo" resultType="com.smart.pojo.WCourseInfo">
     select tb_courseitem.id, tb_courseitem.time, tb_courseitem.course_id as courseId, tb_courseitem.classroom_id as classroomId, tb_courseitem.teacher_id as teacherId, tb_teacher.name as teacherName ,tb_course.name as courseName ,tb_course.course_note as courseNode, tb_course.attendance_total_score as attendanceTotalScore, tb_course.leave_score as leaveScore, tb_course.attend_score as attendScore, tb_course.late_attend_score as lateAttendScore,tb_course.head_up_score as headUpScore
     from tb_course_class ,tb_courseitem ,tb_teacher ,tb_course
     where tb_course_class.class_id = #{classId}
        and tb_courseitem.course_id = tb_course_class.course_id
        and tb_courseitem.teacher_id = tb_teacher.id
        and tb_course.id = tb_courseitem.course_id
        and tb_courseitem.time between #{start} and #{end}
        order by tb_courseitem.time ASC
  </select>
  <select id="selectStudentInfo" resultType="com.smart.pojo.StudentInfo">
    select tb_student.id, tb_student.name, tb_student.sex, tb_student.phone_code as phone, tb_student.email,tb_student.picture, tb_class.id as classId, tb_class.name as className, tb_profession.id as professionId, tb_profession.name as professionName, tb_college.id as collegeId, tb_college.name as collegeName
    from tb_student, tb_class, tb_profession, tb_college
    where tb_student.wexin_id = #{wexin_id}
      and tb_student.class_id = tb_class.id
      and tb_class.profession_id = tb_profession.id
      and tb_profession.college_id = tb_college.id
  </select>
  <select id="selectStudentIdAndPassword" resultType="com.smart.pojo.StudentInfo">
    select tb_student.id, tb_student.name, tb_student.sex, tb_student.phone_code as phone, tb_student.email,tb_student.picture, tb_class.id as classId, tb_class.name as className, tb_profession.id as professionId, tb_profession.name as professionName, tb_college.id as collegeId, tb_college.name as collegeName
    from tb_student, tb_class, tb_profession, tb_college
    where tb_student.id = #{id} and tb_student.password = #{password}
        and tb_student.class_id = tb_class.id
        and tb_class.profession_id = tb_profession.id
        and tb_profession.college_id = tb_college.id
  </select>
  <select id="selectAttendanceItem" resultType="com.smart.pojo.AttendanceItem">
    select tb_attendance.attendance_id, tb_attendance.courseitem_id, tb_courseitem.course_id, tb_course.name, tb_courseitem.time, tb_attendance.status, tb_attendance.head_up_rate, tb_attendance.goal, tb_courseitem.teacher_id,tb_teacher.name as teacher_name, tb_courseitem.classroom_id, tb_course.course_note
    from tb_attendance, tb_courseitem, tb_course, tb_teacher, tb_classroom
    where tb_attendance.student_id = #{studentId}
          and tb_courseitem.id = tb_attendance.courseitem_id
          and tb_courseitem.time between #{start} and #{end}
          and tb_courseitem.course_id = tb_course.id
          and tb_teacher.id = tb_courseitem.teacher_id
          and tb_classroom.id = tb_courseitem.classroom_id
          order by time asc
  </select>
  <select id="selectStudentInfoById" resultType="com.smart.pojo.StudentInfo">
    select tb_student.id, tb_student.name, tb_student.sex, tb_student.phone_code as phone, tb_student.email,tb_student.picture, tb_class.id as classId, tb_class.name as className, tb_profession.id as professionId, tb_profession.name as professionName, tb_college.id as collegeId, tb_college.name as collegeName
    from tb_student, tb_class, tb_profession, tb_college
    where tb_student.id = #{id}
        and tb_student.class_id = tb_class.id
        and tb_class.profession_id = tb_profession.id
        and tb_profession.college_id = tb_college.id
  </select>
  <select id="selectAttendanceItemByStudentCourseStartEnd" resultType="com.smart.pojo.AttendanceItem">
    select tb_attendance.attendance_id, tb_attendance.courseitem_id, tb_course.name, tb_courseitem.time, tb_attendance.status, tb_attendance.head_up_rate, tb_attendance.goal, tb_courseitem.teacher_id,tb_teacher.name as teacher_name, tb_courseitem.classroom_id, tb_course.course_note
    from tb_attendance, tb_courseitem, tb_course, tb_teacher, tb_classroom
    where tb_attendance.student_id = #{studentId}
        and tb_courseitem.course_id = #{courseId}
        and tb_courseitem.id = tb_attendance.courseitem_id
        and tb_courseitem.time between #{start} and #{end}
        and tb_courseitem.course_id = tb_course.id
        and tb_teacher.id = tb_courseitem.teacher_id
        and tb_classroom.id = tb_courseitem.classroom_id
        order by time asc
  </select>
  <select id="selectAttendanceItemByClassCourseStartEnd" resultType="com.smart.pojo.AttendanceItem">
    select tb_attendance.attendance_id, tb_attendance.courseitem_id, tb_course.name, tb_courseitem.time, tb_attendance.status, tb_attendance.head_up_rate, tb_attendance.goal, tb_courseitem.teacher_id,tb_teacher.name as teacher_name,tb_courseitem.classroom_id, tb_course.course_note, tb_student.id as student_id, tb_student.name as student_name
    from tb_attendance, tb_courseitem, tb_course, tb_teacher, tb_classroom, tb_class, tb_student
    where tb_attendance.courseitem_id = tb_courseitem.id
        and tb_courseitem.course_id = #{courseId}
        and tb_course.id = tb_courseitem.course_id
        and tb_attendance.student_id = tb_student.id
        and tb_student.class_id = #{classId}
        and tb_student.class_id = tb_class.id
        and tb_courseitem.time between #{start} and #{end}
        and tb_teacher.id = tb_courseitem.teacher_id
        and tb_classroom.id = tb_courseitem.classroom_id
        order by time asc, student_id asc
  </select>
  <select id="selectDaysAttendanceCollectByIDStartEnd" resultType="com.smart.pojo.DaysAttendanceCollect">
    select date_format(tb_attendance.create_date, '%Y-%m-%d') as date , count(*) as sum, avg(goal) as avgGoal, avg(head_up_rate) as avg_head_up_rate, avg(headup_score) as avg_head_up_score
        from tb_attendance
        where tb_attendance.student_id = #{id}
        and tb_attendance.create_date between #{start} and #{end}
        group by date
        order by date asc
  </select>
  <select id="queryStageAttendanceCollectByIdStartEnd" resultType="com.smart.pojo.StageAttendanceCollect">
    select avg(tb_attendance.head_up_rate) as avg_head_up_rate, avg(tb_attendance.goal) as avg_goal, sum(status = 'late') as late_times, sum(status = 'attend') as attend_times, sum(status = 'leave') as leave_times, sum(status = 'absent') as absent_times
    from tb_attendance
    where tb_attendance.student_id = #{id}
        and tb_attendance.create_date between #{start} and #{end}
  </select>
  <select id="queryStageAttendanceCollectByCourseIdStartEnd" resultType="com.smart.pojo.StageAttendanceCollect">
    select avg(tb_attendance.head_up_rate) as avg_head_up_rate, avg(tb_attendance.goal) as avg_goal, sum(status = 'late') as late_times, sum(status = 'attend') as attend_times, sum(status = 'leave') as leave_times, sum(status = 'absent') as absent_times
    from tb_attendance, tb_courseitem
    where tb_attendance.courseitem_id = tb_courseitem.id
        and tb_courseitem.course_id = #{course_id}
        and tb_attendance.create_date between #{start} and #{end}
  </select>
  <select id="queryCheckAttendance" resultType="com.smart.pojo.CheckAttendance">
    select tb_attendance.courseitem_id, avg(tb_attendance.goal) as avg_goal, avg(tb_attendance.head_up_rate) as avg_head_up_rate, sum(status='absent') as absent_num, SUM(sleep='1') sleep_num,tb_attendance.create_date
    from tb_attendance, tb_courseitem
    where tb_attendance.create_date between #{start} and #{end}
        and tb_attendance.courseitem_id = tb_courseitem.id
        and tb_courseitem.teacher_id = #{teacher_id}
        group by tb_attendance.courseitem_id
  </select>
</mapper>